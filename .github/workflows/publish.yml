name: Publish Python Packages

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      build_wheels:
        description: 'Build platform-specific wheels'
        required: true
        default: 'false'
        type: boolean
      build_linux:
        description: 'Build Linux wheels'
        required: true
        default: 'true'
        type: boolean
      build_macos:
        description: 'Build macOS wheels'
        required: true
        default: 'true'
        type: boolean
      build_windows:
        description: 'Build Windows wheels'
        required: true
        default: 'false'
        type: boolean

permissions:
  contents: read
  id-token: write

concurrency:
  group: "publish"
  cancel-in-progress: true

jobs:
  build-wheels:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build_flag: build_linux
          - os: macos-latest
            build_flag: build_macos
          - os: windows-latest
            build_flag: build_windows
    name: Build and publish Python package (${{ matrix.os }})
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    if: |
      inputs.build_wheels == true && (
        (matrix.os == 'ubuntu-latest' && inputs.build_linux == true) ||
        (matrix.os == 'macos-latest' && inputs.build_macos == true) ||
        (matrix.os == 'windows-latest' && inputs.build_windows == true)
      )

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
        shell: bash

      - name: Build package
        env:
          CIBW_SKIP: "pp* *-musllinux*"  # Skip PyPy and musllinux builds
        run: |
          cibuildwheel --output-dir dist

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
          path: |
            dist/*.whl

  build-source-dist:
    name: Build and publish Python package (source distribution)
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
        shell: bash

      - name: Build source distribution
        run: |
          python -m build --sdist --outdir dist

      - name: Upload source distribution
        uses: actions/upload-artifact@v3
        with:
          name: source-dist
          path: |
            dist/*.tar.gz

  publish-wheels:
    needs: [build-wheels, build-source-dist]
    name: Publish Python wheels
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Move wheels to dist directory
        run: |
          mkdir -p final_dist
          find dist -name "*.whl" -exec mv {} final_dist/ \;
          find dist -name "*.tar.gz" -exec mv {} final_dist/ \;

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: final_dist/
